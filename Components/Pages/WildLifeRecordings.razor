@page "/wildliferecordings"
@using Services
@using XenoCanto
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject IXenoCantoService _xenoCantoService
@inject IXenoCantoFilterService _xenoCantoFilterService

@code{
    private bool isLoading = true;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _xenoCantoFilterService.InitialData = await _xenoCantoService.GetAsync();
            isLoading = false;
        }
        catch (Exception ex)
        {
            _xenoCantoFilterService.errorString = ex.Message;
        }
    }
}

<PageTitle>Wild Life Recordings In Surrey England</PageTitle>

<h2>Wild Life Recordings In Surrey England</h2>


@if (isLoading)
{
    @if (_xenoCantoFilterService.errorString is not null)
    {
        <p><em>@_xenoCantoFilterService.errorString</em></p>
    }
    else
    {
        <p><em>Loading...</em></p>
    }
}
else
{

   @*  <FilterComponent Mode="_xenoCantoFilterService.ModeFilter" NameFilter="_xenoCantoFilterService.NameFilter" /> *@

    <fieldset>
        <legend>Filter Name</legend>
        <input type="text" @bind="_xenoCantoFilterService.NameFilter" placeholder="Filter by Name..." @bind:event="oninput" />
    </fieldset>
    <fieldset>
        <legend>Filter Type</legend>
        <InputRadioGroup @bind-Value="_xenoCantoFilterService.ModeFilter">
            <label>
                <InputRadio Value="Services.FilterModes.All" />
                All
            </label>
            <label>
                <InputRadio Value="Services.FilterModes.Animals" />
                Animals
            </label>
            <label>
                <InputRadio Value="Services.FilterModes.Birds" />
                Birds
            </label>
        </InputRadioGroup>
    </fieldset>



    <GridComponent Recordings="_xenoCantoFilterService.Recordings" />   

}

